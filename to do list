import tkinter as tk
from tkinter import messagebox
from tkinter import simpledialog
from datetime import datetime

class TodoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List")

        self.tasks = []

        self.frame = tk.Frame(root)
        self.frame.pack(pady=10)

        self.listbox = tk.Listbox(self.frame, width=50, height=10, bd=0)
        self.listbox.pack(side=tk.LEFT, fill=tk.BOTH)

        self.scrollbar = tk.Scrollbar(self.frame)
        self.scrollbar.pack(side=tk.RIGHT, fill=tk.BOTH)

        self.listbox.config(yscrollcommand=self.scrollbar.set)
        self.scrollbar.config(command=self.listbox.yview)

        self.entry = tk.Entry(root, width=50)
        self.entry.pack(pady=10)

        self.add_button = tk.Button(root, text="Add Task", width=48, command=self.add_task)
        self.add_button.pack(pady=5)

        self.complete_button = tk.Button(root, text="Mark as Complete", width=48, command=self.mark_as_complete)
        self.complete_button.pack(pady=5)

        self.remove_button = tk.Button(root, text="Remove Task", width=48, command=self.remove_task)
        self.remove_button.pack(pady=5)

    def add_task(self):
        task = self.entry.get()
        if task != "":
            due_date = simpledialog.askstring("Due Date", "Enter the due date (YYYY-MM-DD):")
            if due_date:
                try:
                    due_date_obj = datetime.strptime(due_date, '%Y-%m-%d')
                    formatted_date = due_date_obj.strftime('%Y-%m-%d')
                    task_with_date = f"{task} (Due: {formatted_date})"
                    self.tasks.append(task_with_date)
                    self.update_listbox()
                    self.entry.delete(0, tk.END)
                except ValueError:
                    messagebox.showwarning("Warning", "Invalid date format. Please use YYYY-MM-DD.")
            else:
                self.tasks.append(task)
                self.update_listbox()
                self.entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Warning", "You must enter a task.")

    def remove_task(self):
        try:
            task_index = self.listbox.curselection()[0]
            self.tasks.pop(task_index)
            self.update_listbox()
        except IndexError:
            messagebox.showwarning("Warning", "You must select a task.")

    def mark_as_complete(self):
        try:
            task_index = self.listbox.curselection()[0]
            task = self.tasks[task_index]
            self.tasks[task_index] = task + " [Completed]"
            self.update_listbox()
        except IndexError:
            messagebox.showwarning("Warning", "You must select a task.")

    def update_listbox(self):
        self.listbox.delete(0, tk.END)
        for task in self.tasks:
            self.listbox.insert(tk.END, task)

if __name__ == "__main__":
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()
